{
  "PUSHREF": {
    "description": {
      "short": "",
      "long": "Pushes the reference `ref` onto the stack.\n_Details:_ Pushes the first reference of `cc.code` onto the stack as a _Cell_ (and removes this reference from the current continuation).",
      "tags": [],
      "operands": ["c"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "result",
            "value_types": ["Cell"]
          }
        ]
      }
    }
  },
  "PUSHREFSLICE": {
    "description": {
      "short": "",
      "long": "Pushes the reference `ref` onto the stack and converts the pushed cell into a _Slice_.",
      "tags": [],
      "operands": ["c"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "result",
            "value_types": ["Slice"]
          }
        ]
      }
    }
  },
  "PUSHREFCONT": {
    "description": {
      "short": "",
      "long": "Pushes the reference `ref` onto the stack and converts the pushed cell into a _Continuation_.",
      "tags": [],
      "operands": ["c"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "result",
            "value_types": ["Continuation"]
          }
        ]
      }
    }
  },
  "PUSHSLICE": {
    "description": {
      "short": "Pushes the `slice` onto the stack.",
      "long": "Pushes the slice `slice` onto the stack.\n_Details:_ Pushes the (prefix) subslice of `cc.code` consisting of its first `8x+4` bits and no references (i.e., essentially a bitstring), where `0 <= x <= 15`.\nA completion tag is assumed, meaning that all trailing zeroes and the last binary one (if present) are removed from this bitstring.\nIf the original bitstring consists only of zeroes, an empty slice will be pushed.",
      "tags": [],
      "operands": ["slice"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "result",
            "value_types": ["Slice"]
          }
        ]
      }
    }
  },
  "PUSHSLICE_REFS": {
    "description": {
      "short": "",
      "long": "Pushes the `slice` onto the stack.\n_Details:_ Pushes the (prefix) subslice of `cc.code` consisting of its first `1 <= r+1 <= 4` references and up to first `8xx+1` bits of data, with `0 <= xx <= 31`.\nA completion tag is also assumed.",
      "tags": [],
      "operands": ["slice"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "result",
            "value_types": ["Slice"]
          }
        ]
      }
    }
  },
  "PUSHSLICE_LONG": {
    "description": {
      "short": "Pushes the `slice` onto the stack.",
      "long": "Pushes the `slice` onto the stack.\n_Details:_ Pushes the subslice of `cc.code` consisting of `0 <= r <= 4` references and up to `8xx+6` bits of data, with `0 <= xx <= 127`.\nA completion tag is assumed.",
      "tags": [],
      "operands": ["slice"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "result",
            "value_types": ["Slice"]
          }
        ]
      }
    }
  },
  "PUSHCONT": {
    "description": {
      "short": "Pushes a continuation onto the stack.",
      "long": "Fetches a simple ordinary continuation from the current code slice and pushes it onto the stack. The length of the continuation is at most 127 * 8 bits and 3 references.",
      "tags": ["stack", "continuation"],
      "operands": ["c"],
      "exit_codes": [],
      "related_instructions": ["PUSHCONT_SHORT"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "result",
            "value_types": ["Continuation"]
          }
        ]
      }
    }
  },
  "PUSHCONT_SHORT": {
    "description": {
      "short": "Pushes a short continuation onto the stack.",
      "long": "Fetches a simple ordinary continuation from the current code slice and pushes it onto the stack. The length of the continuation is at most 15 * 8 bits.",
      "tags": ["stack", "continuation"],
      "operands": ["c"],
      "exit_codes": [],
      "related_instructions": ["PUSHCONT"]
    },
    "signature": {
      "outputs": {
        "stack": [
          {
            "type": "simple",
            "name": "c",
            "value_types": ["Continuation"]
          }
        ]
      }
    }
  }
}
